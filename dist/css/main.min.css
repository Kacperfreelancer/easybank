.wrapper{margin:0 auto;max-width:1440px}.section-heading{text-align:center;margin-bottom:1em;font-size:4rem;font-weight:300;color:#2d314d}.button{background-image:linear-gradient(90deg,#2bb7da,#31d35c);padding:1em 2em;border-radius:25px;color:#fff;font-weight:700;text-decoration:none}*{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth;font-size:62.5%}body{font-size:1.8rem;font-family:Public Sans,sans-serif;color:#9698a6}.navbar{position:fixed;top:0;left:0;right:0;z-index:2;display:flex;justify-content:space-between;align-items:center;padding:1em;background-color:#fafafa}.hamburger-menu{position:fixed;top:-120%;left:5%;right:5%;padding:2em;text-align:center;border-radius:5px;box-shadow:0 30px 100px 50px #2d314d;background-color:#fff;z-index:1;transition:top 1s}.hamburger-menu__list{list-style:none}.hamburger-menu__item a{display:block;text-decoration:none;padding:.5em;font-size:2rem;font-weight:300;color:#2d314d}.hamburger-menu.active{top:12%}.header{display:flex;flex-direction:column}.header__img-box{max-height:1200px;background-image:url(../img/bg-intro-mobile.svg);background-repeat:no-repeat;background-size:contain;background-position:100% 10%}.header__img-box--img{max-width:100%}.header__text{padding:2em;text-align:center;font-size:1.4rem}.header__text-title{margin-bottom:1em;font-size:4rem;font-weight:300;color:#2d314d}.header__text__description{line-height:160%;margin-bottom:3em}.header__text-cta{display:block;width:50%;margin:2em auto}@media (min-width:756px){.header{margin-top:2em;flex-direction:row;align-items:center;gap:2em}.header__img-box{width:50%;order:1}.header__text{text-align:left;padding:3em;width:50%}.header__text-cta{margin:2em 0;text-align:center}}@media (min-width:992px){.header__img-box{background-image:url(../img/bg-intro-desktop.svg);background-position:0 0;background-size:cover}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
